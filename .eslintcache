[{"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/index.js":"1","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/App.js":"2","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/reportWebVitals.js":"3","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Categories.js":"4","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Difficulty.js":"5","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Range.js":"6","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/PlayGame.js":"7","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/functions/useToggle.js":"8","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/api.js":"9"},{"size":500,"mtime":1611609040520,"results":"10","hashOfConfig":"11"},{"size":2197,"mtime":1611872784592,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611609040520,"results":"13","hashOfConfig":"11"},{"size":742,"mtime":1611817492009,"results":"14","hashOfConfig":"11"},{"size":1016,"mtime":1611817126758,"results":"15","hashOfConfig":"11"},{"size":2583,"mtime":1611855311549,"results":"16","hashOfConfig":"11"},{"size":1771,"mtime":1611871133788,"results":"17","hashOfConfig":"11"},{"size":252,"mtime":1611871132980,"results":"18","hashOfConfig":"11"},{"size":173,"mtime":1611872671554,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1k58691",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/index.js",[],["41","42"],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/App.js",["43"],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/reportWebVitals.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Categories.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Difficulty.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Range.js",["44","45"],"import axios from 'axios'\nimport { useEffect, useState } from 'react'\n\nfunction Range ({ setGame, setSelectedRange, selectedCategory, selectedDifficulty, handleBackToDifficulty }) {\n  const [possibleCount, setPossibleCount] = useState(0)\n  const [numOfQuestions, setNumOfQuestions] = useState(0)\n\n  useEffect(() => {\n    axios.get(`https://opentdb.com/api_count.php?category=${selectedCategory.id}`)\n      .then(response => {\n        console.log('count', response.data.category_question_count)\n        const data = response.data.category_question_count\n\n        let searchDifficulty = ''\n\n        if (selectedDifficulty === 'easy') {\n          searchDifficulty = 'total_easy_question_count'\n        } else if (selectedDifficulty === 'medium') {\n          searchDifficulty = 'total_medium_question_count'\n        } else {\n          searchDifficulty = 'total_hard_question_count'\n        }\n        console.log('data', data)\n        console.log('search difficulty', searchDifficulty)\n        console.log('data + hard level', data.total_hard_question_count)\n        console.log('data + search', data.searchDifficulty)\n\n        const possibleTotalCount = []\n        const totalCount = data.total_hard_question_count\n        if (totalCount > 50) {\n          possibleTotalCount.push(50)\n        } else {\n          possibleTotalCount.push(totalCount)\n        }\n        setPossibleCount(possibleTotalCount)\n      })\n  }, [])\n\n  function DisplayPossibleNumberOfQuestions () {\n    const numArray = []\n    for (let num = 1; num <= possibleCount; num++) {\n      numArray.push(<option key={num} value={num}>{num}</option>)\n    }\n    console.log('numofqs', numOfQuestions)\n    console.log('numArray:', numArray)\n\n    return numArray\n  }\n\n  //   console.log('value state', { selectedRange })\n\n  return (\n    <div>\n      <div>\n        <div className='f6 link dim br-pill ph3 pv2 mb2 dib white bg-mid-gray'>{selectedCategory.name}</div>\n        <div className='f6 link dim br-pill ph3 pv2 mb2 dib white bg-mid-gray'>{selectedDifficulty}</div>\n        <div>How many questions would you like?</div>\n        <select onChange={(event) => setSelectedRange(event.currentTarget.value)}>\n          <DisplayPossibleNumberOfQuestions />\n\n        </select>\n      </div>\n      <div>\n        <button onClick={() => setGame(true)}>Play Game</button>\n        <button\n          className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button'\n          onClick={handleBackToDifficulty}\n        >\n          Go back to difficulty\n        </button>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Range\n","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/PlayGame.js",["46","47"],"import axios from 'axios'\nimport { useCallback, useEffect, useState } from 'react'\nimport useToggle from '../functions/useToggle'\n\nfunction PlayGame ({ selectedCategory, selectedDifficulty, selectedRange, handleToQuit }) {\n  const [questions, setQuestions] = useState([])\n  // const [showAnswers, setShowAnswers] = useState(false)\n  const [isOn, toggleIsOn] = useToggle()\n\n  useEffect(() => {\n    axios.get(`https://opentdb.com/api.php?amount=${selectedRange}&encode=url3986&category=${selectedCategory.id}&difficulty=${selectedDifficulty}`)\n\n      .then(response => {\n        const data = response.data.results\n        setQuestions(data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Play Game</h2>\n\n      <button\n        className='go-to-categories-button'\n        onClick={handleToQuit}\n      >\n        Quit Game\n      </button>\n      <div>\n        {questions.map((question) => (\n          <article className='center mw5 mw6-ns br3 hidden ba b--black-10 mv4' key={question.question}>\n            <h1 className='f4 bg-near-white br3 br--top black-60 mv0 pv2 ph3'>{decodeURIComponent(question.question)}\n              <button onClick={toggleIsOn}>\n                {isOn ? 'Hide Answers' : 'Show Answers'}\n              </button>\n            </h1>\n            {isOn && (\n              <div className='pa3 bt b--black-10'>\n                <p className='f6 f5-ns lh-copy measure'>\n                  Correct Answer: {decodeURIComponent(question.correct_answer)}\n                </p>\n                <p className='f6 f5-ns lh-copy measure'>\n                  Wrong Answer(s): {decodeURIComponent(question.incorrect_answers)}\n                </p>\n              </div>\n            )}\n\n          </article>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PlayGame\n","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/functions/useToggle.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/api.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":6,"column":26,"nodeType":"54","messageId":"55","endLine":6,"endColumn":43},{"ruleId":"57","severity":1,"message":"58","line":37,"column":6,"nodeType":"59","endLine":37,"endColumn":8,"suggestions":"60"},{"ruleId":"52","severity":1,"message":"61","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":21},{"ruleId":"57","severity":1,"message":"62","line":17,"column":6,"nodeType":"59","endLine":17,"endColumn":8,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'getCategoryList' is defined but never used.","Identifier","unusedVar","'setNumOfQuestions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedCategory.id' and 'selectedDifficulty'. Either include them or remove the dependency array.","ArrayExpression",["66"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'selectedCategory.id', 'selectedDifficulty', and 'selectedRange'. Either include them or remove the dependency array.",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [selectedCategory.id, selectedDifficulty]",{"range":"72","text":"73"},"Update the dependencies array to be: [selectedCategory.id, selectedDifficulty, selectedRange]",{"range":"74","text":"75"},[1412,1414],"[selectedCategory.id, selectedDifficulty]",[653,655],"[selectedCategory.id, selectedDifficulty, selectedRange]"]