[{"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/index.js":"1","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/App.js":"2","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/reportWebVitals.js":"3","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Categories.js":"4","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Difficulty.js":"5","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Range.js":"6","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/PlayGame.js":"7","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/functions/useToggle.js":"8","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/api.js":"9","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/GameTracker.js":"10","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Timer.js":"11","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/HomeScreen.js":"12","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Names.js":"13","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/EndOfGame.js":"14"},{"size":500,"mtime":1611609040520,"results":"15","hashOfConfig":"16"},{"size":3703,"mtime":1612150897935,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611609040520,"results":"18","hashOfConfig":"16"},{"size":986,"mtime":1612127248708,"results":"19","hashOfConfig":"16"},{"size":1148,"mtime":1612065778168,"results":"20","hashOfConfig":"16"},{"size":2556,"mtime":1612065753599,"results":"21","hashOfConfig":"16"},{"size":6276,"mtime":1612148801462,"results":"22","hashOfConfig":"16"},{"size":252,"mtime":1611895265813,"results":"23","hashOfConfig":"16"},{"size":197,"mtime":1611888968614,"results":"24","hashOfConfig":"16"},{"size":1894,"mtime":1612143474602,"results":"25","hashOfConfig":"16"},{"size":1208,"mtime":1612143327846,"results":"26","hashOfConfig":"16"},{"size":915,"mtime":1612189719153,"results":"27","hashOfConfig":"16"},{"size":1570,"mtime":1612152149126,"results":"28","hashOfConfig":"16"},{"size":1206,"mtime":1612151513962,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1k58691",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/index.js",[],["65","66"],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/App.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/reportWebVitals.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Categories.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Difficulty.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Range.js",["67","68"],"import axios from 'axios'\nimport { useEffect, useState } from 'react'\n\nfunction Range ({ setGame, selectedRange, setSelectedRange, selectedCategory, selectedDifficulty, handleBackToDifficulty, setNavigation }) {\n  const [possibleCount, setPossibleCount] = useState(0)\n  const [numOfQuestions, setNumOfQuestions] = useState(0)\n\n  useEffect(() => {\n    axios.get(`https://opentdb.com/api_count.php?category=${selectedCategory.id}`)\n      .then(response => {\n        console.log('count', response.data.category_question_count)\n        const data = response.data.category_question_count\n\n        let searchDifficulty = ''\n\n        if (selectedDifficulty === 'easy') {\n          searchDifficulty = 'total_easy_question_count'\n        } else if (selectedDifficulty === 'medium') {\n          searchDifficulty = 'total_medium_question_count'\n        } else {\n          searchDifficulty = 'total_hard_question_count'\n        }\n        console.log('data', data)\n        console.log('search difficulty', searchDifficulty)\n        console.log('data + hard level', data.total_hard_question_count)\n        console.log('data + search', data[searchDifficulty])\n\n        const possibleTotalCount = []\n        const totalCount = data[searchDifficulty]\n        if (totalCount > 50) {\n          possibleTotalCount.push(50)\n        } else {\n          possibleTotalCount.push(totalCount)\n        }\n        setPossibleCount(possibleTotalCount)\n      })\n  }, [])\n\n  function DisplayPossibleNumberOfQuestions () {\n    const numArray = []\n    for (let num = 1; num <= possibleCount; num++) {\n      numArray.push(<option key={num} value={num}>{num}</option>)\n    }\n    console.log('numofqs', numOfQuestions)\n    console.log('numArray:', numArray)\n\n    return numArray\n  }\n\n  //   console.log('value state', { selectedRange })\n\n  return (\n    <div>\n      <div className='screen-title-back-button-container'>\n        <h3 className='f3 f2-m f1-l fw2 black-90 mv3'>Select the Number of Questions</h3>\n        <button\n          className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button'\n          onClick={() => setNavigation('setting-difficulty')}\n        >\n          Go back to difficulty\n        </button>\n      </div>\n      <div>\n        <select value={selectedRange} onChange={(event) => setSelectedRange(event.currentTarget.value)}>\n          <DisplayPossibleNumberOfQuestions />\n\n        </select>\n      </div>\n      <div>\n        <button onClick={() => setNavigation('playing-game')}>Play Game</button>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Range\n","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/PlayGame.js",["69","70"],"import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport Timer from './Timer'\n\nfunction randomize (activeQuestionSet) {\n  const correctAnswer = decodeURIComponent(activeQuestionSet.correct_answer)\n  const incorrectAnswers = decodeURIComponent(activeQuestionSet.incorrect_answers).split(',')\n  const allAnswers = incorrectAnswers.concat(correctAnswer)\n  // console.log('all answers before random', allAnswers)\n\n  for (let i = allAnswers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i)\n    const temp = allAnswers[i]\n    allAnswers[i] = allAnswers[j]\n    allAnswers[j] = temp\n  }\n  // console.log('all answers after random', allAnswers)\n\n  return allAnswers\n}\n\nfunction updateScores (teams, setTeams, correctAnswer, currentAnswers) {\n  const newTeams = [\n    ...teams\n  ]\n\n  for (const teamName of Object.keys(currentAnswers)) {\n    const teamAnswer = currentAnswers[teamName]\n    const idx = teams.findIndex((team) => team.name === teamName)\n    console.log('index of team', teamName, idx, teamAnswer, correctAnswer)\n    if (idx > -1 && teamAnswer === correctAnswer) {\n      newTeams[idx] = {\n        ...newTeams[idx],\n        score: newTeams[idx].score + 1\n      }\n    }\n  }\n  setTeams(newTeams)\n}\n\nfunction PlayGame ({ selectedCategory, selectedDifficulty, selectedRange, teams, setTeams, setNavigation, setIsActive, setSelectedCategory, setSelectedRange, setSelectedDifficulty }) {\n  const [questionSets, setQuestionSets] = useState([])\n  const [questionSetPosition, setQuestionSetPosition] = useState(0)\n  const [currentAnswers, setCurrentAnswers] = useState({})\n  const [randomAnswers, setRandomAnswers] = useState([])\n  const [answerSubmitted, setAnswerSubmitted] = useState(false)\n\n  // console.log('teams from play game', teams)\n  const activeQuestionSet = questionSets[questionSetPosition]\n\n  useEffect(() => {\n    axios.get(`https://opentdb.com/api.php?amount=${selectedRange}&encode=url3986&category=${selectedCategory.id}&difficulty=${selectedDifficulty}`)\n\n      .then(response => {\n        const data = response.data.results\n        setQuestionSets(data)\n      })\n  }, [])\n\n  useEffect(() => {\n    if (activeQuestionSet) {\n      const newAnswers = randomize(activeQuestionSet)\n      setRandomAnswers(newAnswers)\n    }\n  }, [activeQuestionSet])\n\n  if (questionSets.length === 0) {\n    return 'loading'\n  }\n\n  const correctAnswer = decodeURIComponent(activeQuestionSet.correct_answer)\n\n  function selectAnswerForTeam (teamName, answer) {\n    // console.log('select answer for team', teamName, answer)\n    setCurrentAnswers({\n      ...currentAnswers,\n      [teamName]: answer\n    })\n  }\n\n  // debugger station\n  console.log('correct Answer', correctAnswer)\n  // console.log('correct answer state debugger', correctAnswer)\n  // console.log('correct answer state debugger', activeQuestionSet)\n  // console.log('reveal answer set to:', )\n  // console.log('random Answers in debugger', randomAnswers)\n\n  return (\n    <div>\n      <div className='screen-title-back-button-container'>\n        <h3 className='f3 f2-m f1-l fw2 black-90 mv3'>Play Game</h3>\n        <button\n          className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button'\n          onClick={() => { setSelectedCategory(null); setSelectedRange(1); setSelectedDifficulty(null); setTeams = ([]); setNavigation('home-screen') }}\n        >\n          Restart Game\n        </button>\n        <button\n          className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button'\n          onClick={() => setNavigation('end-of-game')}\n        >\n          End Game\n        </button>\n      </div>\n      <div className='page-content-container'>\n        <div className='nav-submit-btns-container'>\n          <div className='nav-btn-container'>\n            <button disabled={questionSetPosition === 0} className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button' onClick={() => setQuestionSetPosition(questionSetPosition - 1)}>Previous Question</button>\n            <button disabled={answerSubmitted} className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button' onClick={() => { updateScores(teams, setTeams, correctAnswer, currentAnswers); setAnswerSubmitted(true) }}>Submit Answers</button>\n            <button disabled={questionSetPosition === questionSets.length - 1} className='f6 link dim br-pill ba bw2 ph3 pv2 mb2 dib light-purple handler-button' onClick={() => { setQuestionSetPosition(questionSetPosition + 1); setCurrentAnswers({}); setAnswerSubmitted(false) }}>Next Question</button>\n          </div>\n        </div>\n        <div>\n          <article className='main-game-card center mw5 mw6-ns br3 hidden ba b--black-10 mv4' key={activeQuestionSet.question}>\n            <h1 className='f4 bg-near-white br3 br--top light-purple-60 mv0 pv2 ph3'>{decodeURIComponent(activeQuestionSet.question)}\n            </h1>\n            <div className='answers-radio-container'>\n              <div className='answer-container pa3 bt b--black-10'>\n                {randomAnswers.map((answer) => (\n                  <p\n                    key={answer}\n                    className={`${answerSubmitted && answer === correctAnswer ? 'reveal-correct-answer each-answer f6 f5-ns lh-copy measure' : 'each-answer f6 f5-ns lh-copy measure'}`}\n                  >\n                    {answer}\n                  </p>\n                ))}\n              </div>\n              {teams.map((team) => (\n                <div className='team-card' key={`answer-team_${team.name}`}>\n                  <h3 className='team-name'>{team.name}</h3>\n                  <form>\n                    {randomAnswers.map((answer) => (\n                      <div key={`radio-${answer}-${team.name}`}>\n                        <input\n                          type='radio'\n                          className='checkboxes'\n                          checked={currentAnswers[team.name] === answer}\n                          onChange={() => selectAnswerForTeam(team.name, answer)}\n                        />\n                      </div>\n                    ))}\n                  </form>\n                </div>\n              ))}\n\n            </div>\n          </article>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default PlayGame\n","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/functions/useToggle.js",[],["71","72"],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/api.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/GameTracker.js",["73","74"],"import { useState } from 'react'\nimport Timer from './Timer'\n\nfunction GameTracker ({ selectedCategory, selectedDifficulty, selectedRange, teams, navigation }) {\n  const [isShown, setIsShown] = useState(false)\n\n  function toggleTagDisplay () {\n    setIsShown(!isShown)\n  }\n\n  function displayResult (event, idx) {\n    // console.log('display result', event.target.value, idx)\n  }\n\n  return (\n    <div>\n      <div>\n        {selectedCategory && (\n          <div className='animate__animated animate__fadeInUpBig game-mode-tags f6 link br-pill ph3 pv2 mb2 dib white bg-mid-gray'>Category: {selectedCategory.name}</div>\n        )}\n        {selectedCategory && selectedDifficulty && (\n          <div className='animate__animated animate__fadeInUpBig game-mode-tags f6 link br-pill ph3 pv2 mb2 dib white bg-mid-gray'>Difficulty: {selectedDifficulty}</div>\n        )}\n        {selectedCategory && selectedDifficulty && selectedRange && navigation === 'playing-game' && (\n          <div className='animate__animated animate__fadeInUpBig game-mode-tags hide-tag f6 link br-pill ph3 pv2 mb2 dib white bg-mid-gray'>Number of Questions: {selectedRange}</div>\n        )}\n      </div>\n      {navigation === 'playing-game' && (\n        <div>\n          <div>\n            <Timer />\n          </div>\n          <div className='team-score-container'>\n            <div className='team-score-header'>\n              <h4 className='team-header'>Team</h4>\n              <h4 className='score-header'>Score</h4>\n            </div>\n            {teams.map((team, idx) => (\n              <div className='team-score-output' key={`display-${team.name}-${idx}`}>\n                <div className='tracker-team-name'>{team.name}</div>\n                <div className='tracker-team-score'>{team.score}</div>\n              </div>\n            ))}\n          </div>\n\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default GameTracker\n","/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Timer.js",["75"],"// Borrowed from https://upmostly.com/tutorials/build-a-react-timer-component-using-hooks.\n// Adapted for my own needs\n\nimport { useState, useEffect } from 'react'\nimport GameTracker from './GameTracker'\n\nfunction Timer () {\n  const [seconds, setSeconds] = useState(0)\n  const [isActive, setIsActive] = useState(false)\n\n  function toggle () {\n    setIsActive(!isActive)\n  }\n\n  function reset () {\n    setSeconds(30)\n    setIsActive(false)\n  }\n\n  useEffect(() => {\n    let interval = null\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1)\n      }, 1000)\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval)\n    }\n    return () => clearInterval(interval)\n  }, [isActive, seconds])\n\n  return (\n    <div className='timer-container'>\n      <div className='time'>\n        {seconds}s\n      </div>\n      <div className='row'>\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button className='button' onClick={reset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Timer\n",["76","77"],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/HomeScreen.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/Names.js",[],"/Users/adrmckinney/momentum-projects/react-trivia-adrmckinney/src/components/EndOfGame.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":26,"nodeType":"84","messageId":"85","endLine":6,"endColumn":43},{"ruleId":"86","severity":1,"message":"87","line":37,"column":6,"nodeType":"88","endLine":37,"endColumn":8,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"91","line":58,"column":6,"nodeType":"88","endLine":58,"endColumn":8,"suggestions":"92"},{"ruleId":"78","replacedBy":"93"},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","severity":1,"message":"95","line":7,"column":12,"nodeType":"84","messageId":"85","endLine":7,"endColumn":28},{"ruleId":"82","severity":1,"message":"96","line":11,"column":12,"nodeType":"84","messageId":"85","endLine":11,"endColumn":25},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":19},{"ruleId":"78","replacedBy":"98"},{"ruleId":"80","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'setNumOfQuestions' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedCategory.id' and 'selectedDifficulty'. Either include them or remove the dependency array.","ArrayExpression",["102"],"'Timer' is defined but never used.","React Hook useEffect has missing dependencies: 'selectedCategory.id', 'selectedDifficulty', and 'selectedRange'. Either include them or remove the dependency array.",["103"],["100"],["101"],"'toggleTagDisplay' is defined but never used.","'displayResult' is defined but never used.","'GameTracker' is defined but never used.",["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [selectedCategory.id, selectedDifficulty]",{"range":"108","text":"109"},"Update the dependencies array to be: [selectedCategory.id, selectedDifficulty, selectedRange]",{"range":"110","text":"111"},[1435,1437],"[selectedCategory.id, selectedDifficulty]",[2124,2126],"[selectedCategory.id, selectedDifficulty, selectedRange]"]